To create an Azure virtual machine (VM) using PowerShell with event log auditing enabled for success and failure events, you'll need to configure the auditing settings on the VM during the creation process. Below are the steps to achieve this:
Step 1: Install and import the Azure PowerShell module (if not already installed):
# Install Azure PowerShell module
Install-Module -Name Az -Force -AllowClobber
# Import the module
Import-Module Az
Step 2: Connect to your Azure account:
Connect-AzAccount
Step 3: Create a new resource group (if you don't have one):
$resourceGroupName = "YourResourceGroupName"
$location = "YourAzureRegion" # e.g., "East US", "West Europe", etc.
New-AzResourceGroup -Name $resourceGroupName -Location $location
Step 4: Create the virtual machine with event log auditing enabled:
$vmName = "YourVMName"
$vmSize = "Standard_DS2_v2" # Choose an appropriate VM size based on your requirements
$adminUsername = "YourAdminUsername"
$adminPassword = "YourAdminPassword" # Please choose a secure password
 
# Event log auditing configuration
$auditSettings = @(
    @{
        AuditPolicyType = "System"
        AuditType = "Success,Failure"
    },
    @{
        AuditPolicyType = "Application"
        AuditType = "Success,Failure"
    }
)
 
# Create a VM configuration
$vmConfig = New-AzVMConfig -VMName $vmName -VMSize $vmSize
$vmConfig = Set-AzVMOperatingSystem -VM $vmConfig -Windows -ComputerName $vmName -Credential (Get-Credential -UserName $adminUsername -Message "Enter the password for the VM.")
 
# Enable event log auditing configuration
$scriptBlock = {
    param($auditSettings)
    $auditSettings | ForEach-Object {
        $auditPolicyType = $_.AuditPolicyType
        $auditType = $_.AuditType
        auditpol /set /subcategory:"$auditPolicyType" /success:$auditType /failure:$auditType
    }
}
 
$vmConfig = Set-AzVMExtension -VM $vmConfig -Name "AuditSettingsScript" -Publisher "Microsoft.Compute" `
    -Type "CustomScriptExtension" -TypeHandlerVersion "1.10" -AutoUpgradeMinorVersion $true `
    -SettingString ('{"commandToExecute": "' + $scriptBlock + '", "auditSettings": ' + $auditSettings | ConvertTo-Json -Compress) + '}'
 
# Create the VM
New-AzVM -ResourceGroupName $resourceGroupName -Location $location -VM $vmConfig
 
Replace the placeholders YourResourceGroupName, YourAzureRegion, YourVMName, YourAdminUsername, and YourAdminPassword with your desired values.
The script above creates an Azure VM with Windows OS and enables event log auditing for both the "System" and "Application" logs, including both success and failure events. The auditSettings array allows you to define additional audit settings for other log types if needed.
 
For Linux VM we repeat the first 3 steps and change step number 4
$vmName = "YourVMName"
$vmSize = "Standard_B1s" # Choose an appropriate VM size based on your requirements
$adminUsername = "YourAdminUsername"
$adminPassword = "YourAdminPassword" # Please choose a secure password
$osDiskName = $vmName + "-osdisk"
 
# Define the Linux image
$offer = "UbuntuServer"
$sku = "18.04-LTS"
$version = "latest"
 
# Create a VM configuration
$vmConfig = New-AzVMConfig -VMName $vmName -VMSize $vmSize
$vmConfig = Set-AzVMOperatingSystem -VM $vmConfig -Linux -ComputerName $vmName -Credential (Get-Credential -UserName $adminUsername -Message "Enter the password for the VM.")
 
# Enable 'auditd' for audit logging
$auditdConfig = @'
{
    "extensionProfile": {
        "extensions": [
            {
                "name": "auditd",
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.5",
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/Azure-Samples/compute-automation-configurations/master/auditd/auditd.sh"
                    ],
                    "commandToExecute": "bash auditd.sh"
                }
            }
        ]
    }
}
'@
 
$vmConfig = Add-AzVMExtension -VM $vmConfig -Name "auditd" -Publisher "Microsoft.OSTCExtensions" `
    -ExtensionType "CustomScriptForLinux" -TypeHandlerVersion "1.5" -SettingString $auditdConfig
 
# Create the VM
New-AzVM -ResourceGroupName $resourceGroupName -Location $location -VM $vmConfig
 
Replace the placeholders YourResourceGroupName, YourAzureRegion, YourVMName, YourAdminUsername, and YourAdminPassword with your desired values.
The script above creates an Azure Linux VM and enables auditd for audit logging. The auditd.sh script is downloaded from a public GitHub repository and executed to configure auditd on the VM.
Please note that while auditd is a good solution for auditing Linux VMs, the logs generated by auditd are not sent directly to the Azure portal. To centralize and view the audit logs, you may want to use Azure Monitor, which supports Linux VM log collection and analysis.
